/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei/core/useGLTF'

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import {MeshBasicMaterial, MeshLambertMaterial} from "three";

type GLTFResult = GLTF & {
  nodes: {
    Cube028: THREE.Mesh
    Cube028_1: THREE.Mesh
    Cube028_2: THREE.Mesh
    Cube028_3: THREE.Mesh
    Cube028_4: THREE.Mesh
  }
  materials: {
    Main: THREE.MeshStandardMaterial
    DarkGrey: THREE.MeshStandardMaterial
    Black: THREE.MeshStandardMaterial
    Accent: THREE.MeshStandardMaterial
    DarkAccent: THREE.MeshStandardMaterial
  }
}

const screenMaterial = new MeshLambertMaterial({
    color: '#4cb1ff',
    emissive: '#00497e',
})

export default function Computer(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/spaceship/Props_Computer.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh material={materials.Main} geometry={nodes.Cube028.geometry} />
      <mesh material={materials.DarkGrey} geometry={nodes.Cube028_1.geometry} />
      <mesh material={screenMaterial} geometry={nodes.Cube028_2.geometry} />
      <mesh material={materials.Accent} geometry={nodes.Cube028_3.geometry} />
      <mesh material={materials.DarkAccent} geometry={nodes.Cube028_4.geometry} />
    </group>
  )
}

useGLTF.preload('/models/spaceship/Props_Computer.glb')
